Memory map:

-- ROM / Flash				0x00000000 - 0x1fffffff (512MB)
-- Reserved				0x20000000 - 0x3fffffff (512MB)
-- SRAM					0x40000000 - 0x5fffffff (512MB)
-- External RAM	/ device		0x60000000 - 0x9fffffff (1GB)
-- External RAM / device		0xa0000000 - 0xdfffffff (1GB)		(uncached)
-- Reserved				0xe0000000 - 0xe0ffffff (16MB)
-- Peripheral (SoC segment 0)		0xe1000000 - 0xe1ffffff (16MB)		(uncached)
-- Peripheral (SoC segment 1)		0xe2000000 - 0xe3ffffff (32MB)		(uncached)
-- Peripheral (SoC segment 2)		0xe4000000 - 0xe7ffffff (64MB)		(uncached)
-- Peripheral (SoC segment 3)		0xe8000000 - 0xefffffff (128MB)		(uncached)
-- Peripheral (core)			0xf0000000 - 0xf0ffffff (16MB)		(uncached)
-- Reserved				0xf1000000 - 0xffffffff (240MB)


I/O ports, timers, UART, SPI and I2C interfaces located on segment 0. 1KB of memory space reserved for each peripheral.

Interrupts are non vectored with a fixed priority (in software). Three level of irq handling is performed.
Interrupts are classified by peripheral subsystem, and each subsystem and peripheral class has its interrupt registers.
Interrupts are handled this way: irq -> major class -> segment -> class (group) -> peripheral handler

major classes:

0 - core peripherals
1 - segment 0
2 - segment 1
3 - segment 2
4 - segment 3

For segments, each one has cause and mask registers. The cause register holds interrupts from specific groups. Each group has also cause and mask registers. An interrupt to the core (CAUSE) happens when a segment cause and mask result are not zero. An interrupt appear on the segment cause register when a group cause and mask result are not zero. This way, specific peripherals from a group can be masked (on group cause and mask registers), a whole group can be masked (on segment cause and mask registers) and a whole segment can be masked (on the core CAUSE and MASK registers).

Peripheral addresses have the following meaning:

0xe1010800
  |/|/|--/
  | | | 
  | | |
  | | |--------device / function
  | |----------class (group)
  |------------peripheral (SoC segment)


Example / default SoC peripherals (segment 0)

Segment 0 base		- 0xe1000000
	S0STATUS	- 0xe1000000	(future use) - can be used to identify hw capability. each bit represents presence of a peripheral.
	S0CAUSE		- 0xe1000400	(bit: ..., 4 - I2C, 3 - SPI, 2 - UART, 1 - timer, 0 - GPIO)
	S0CAUSE_INV	- 0xe1000800	(invert CAUSE bit, before mask)
	S0MASK		- 0xe1000C00

GPIO base		- 0xe1010000
	GPIOSTATUS	- 0xe1010000	(future use) - can be used to identify hw capability. each bit represents presence of a peripheral.
	GPIOCAUSE	- 0xe1010400	(bit: ..., 3 - PIND, 2 - PINC, 1 - PINB, 0 - PINA)
	GPIOCAUSE_INV	- 0xe1010800
	GPIOMASK	- 0xe1010C00
	
	PORTA		- 0xe1014000	(read/write register, port output)
	PINA		- 0xe1014010	(read register, port input)
	PINA_INV	- 0xe1014020	(inverts the value of PINA)
	PINA_MASK	- 0xe1014030

	PORTB		- 0xe1014400
	PORTC		- 0xe1014800
	PORTD		- 0xe1014C00
	PORTE		- 0xe1015000
	PORTF		- 0xe1015400
	PORTG		- 0xe1015800
	PORTH		- 0xe1015C00

	
timers base		- 0xe1020000
	TIMERSTATUS	- 0xe1020000	(future use)
	TIMERCAUSE	- 0xe1020400	(bit: 8 - COUNTER(18), ... 1 - TIMER1, 0 - TIMER0)
	TIMERCAUSE_INV	- 0xe1020800
	TIMERMASK	- 0xe1020C00
	
	TIMER0		- 0xe1024000	(read/write register)
	TIMER0_OVF	- 0xe1024010	(read/write register, resets timer when overflow, inverts irq bit)
	
	TIMER1		- 0xe1024400
	TIMER2		- 0xe1024800
	TIMER3		- 0xe1024C00
	TIMER4		- 0xe1025000
	TIMER5		- 0xe1025400
	TIMER6		- 0xe1025800
	TIMER7		- 0xe1025C00

	COUNTER		- 0xe1026000

UART base		- 0xe1030000
	UARTSTATUS	- 0xe1030000	(future use)
	UARTCAUSE	- 0xe1030400
	UARTCAUSE_INV	- 0xe1030800
	UARTMASK	- 0xe1030C00
	
	UART0		- 0xe1034000
	UART1		- 0xe1034400
	UART2		- 0xe1034800
	UART3		- 0xe1034C00
	UART4		- 0xe1035000
	UART5		- 0xe1035400
	UART6		- 0xe1035800
	UART7		- 0xe1035C00

SPI base		- 0xe1040000
	SPISTATUS	- 0xe1040000	(future use)
	SPICAUSE	- 0xe1040400
	SPICAUSE_INV	- 0xe1040800
	SPIMASK		- 0xe1040C00
	
	SPI1		- 0xe1044000
	SPI2		- 0xe1044400
	SPI3		- 0xe1044800
	SPI4		- 0xe1044C00

I2C base		- 0xe1050000
	I2CSTATUS	- 0xe1050000	(future use)
	I2CCAUSE	- 0xe1050400
	I2CCAUSE_INV	- 0xe1050800
	I2CMASK		- 0xe1050C00
	
	I2C0		- 0xe1054000
	I2C1		- 0xe1054400
	I2C2		- 0xe1054800
	I2C3		- 0xe1054C00
	
PWM base		- 0xe1060000
DAC base		- 0xe1070000
ADC base		- 0xe1080000

